<?php

namespace S\VentasBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * VentasRe
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VentasRe extends EntityRepository
{
	public function findOneByIdJoinedToVentas($cedula,$idEvento)
	{
	   /* $query = $this->getEntityManager()
	        ->createQuery(
	            'SELECT p, c, d FROM SVentasBundle:Ventas p
	            JOIN p.idPersonal c, p.idEvento d
	            WHERE c.cedula = :cedula and p.idEventos= :idEvento'
	        )->setParameter('cedula', $cedula,'idEvento', $idEvento);

	    try {
	        return $query->getSingleResult();
	    } catch (\Doctrine\ORM\NoResultException $e) {
	        return null;
	    }*/

	    return $this->getEntityManager()
            ->createQuery(
                'SELECT p, c, d FROM SVentasBundle:Ventas p JOIN p.idPersonal c JOIN p.idEventos d WHERE c.cedula='.$cedula.' and p.idEventos= '.$idEvento
            )
            ->getResult();
	}

	public function findOneByIdJoinedToListarPersonasR($idEvento)
	{
	    return $this->getEntityManager()
            ->createQuery(
                'SELECT p, c, d FROM SVentasBundle:Ventas p JOIN p.idPersonal c JOIN p.idEventos d WHERE p.estatus=1 and p.idEventos= '.$idEvento
            )
            ->getResult();
	}

	public function findOneByIdJoinedToListarPersonasNoR($idEvento)
	{
	    return $this->getEntityManager()
            ->createQuery(
                'SELECT p, c, d FROM SVentasBundle:Ventas p JOIN p.idPersonal c JOIN p.idEventos d WHERE p.estatus=0 and p.idEventos= '.$idEvento
            )
            ->getResult();
	}
        public function ListarPersonasNoRExcell($idEvento)
	{
	    $resultado= $this->getEntityManager()
            ->createQuery(
                'SELECT  c.cedula, c.primerNombre,c.segundoNombre, c.primerApellido, c.segundoApellido, c.tipoPersonal, c.descripcionEstatusNomina as estatusNomina,'
                    . ' c.unidadAdministrativa, c.ubucacionFuncional, c.codigoNomina, c.nomina, c.nominaCestaticket,p.estatus,p.fechaModificacion'
                    . ',p.monto1 ,p.monto2 ,p.monto3 ,p.observacion FROM SVentasBundle:Ventas p JOIN p.idPersonal c'
                    . ' JOIN p.idEventos d WHERE p.estatus=0 and p.idEventos= '.$idEvento
            )
            ->getResult();
           $ban=0;
            foreach ($resultado as $result){
                if($result['nominaCestaticket']==1){
                    $resultado[$ban]['nominaCestaticket']="SI";
                }else{
                    $resultado[$ban]['nominaCestaticket']="NO";
                }
                if($result['estatus']==1){
                    $resultado[$ban]['estatus']="SI";
                }else{
                    $resultado[$ban]['estatus']="NO";
                }
                switch ($result['tipoPersonal']) {
                    case 0:
                        $resultado[$ban]['tipoPersonal']="Externo";
                        break;
                    case 1:
                        $resultado[$ban]['tipoPersonal']="Empleado Fijo";
                        break;
                    case 2:
                        $resultado[$ban]['tipoPersonal']="Empleado Contratado";
                        break;
                    case 3:
                        $resultado[$ban]['tipoPersonal']="Obrero Fijo";
                        break;
                    case 4:
                        $resultado[$ban]['tipoPersonal']="Obrero Contratado";
                        break;
                    case 5:
                        $resultado[$ban]['tipoPersonal']="Docente Fijo";
                        break;
                    case 6:
                        $resultado[$ban]['tipoPersonal']="Docente Contratado";
                        break;
                    case 7:
                        $resultado[$ban]['tipoPersonal']="Jubilado";
                        break;
                    case 8:
                        $resultado[$ban]['tipoPersonal']="Comision de Servicios";
                        break;
                    case 9:
                        $resultado[$ban]['tipoPersonal']="Libre Nombramiento";
                        break;
                    case 10:
                        $resultado[$ban]['tipoPersonal']="Militar";
                        break;
                    case 11:
                        $resultado[$ban]['tipoPersonal']="Honorarios Profesionales";
                        break;
                    case 12:
                        $resultado[$ban]['tipoPersonal']="Pensionado";
                        break;
                    case 13:
                        $resultado[$ban]['tipoPersonal']="Suplente";
                        break;
                    case 14:
                        $resultado[$ban]['tipoPersonal']="Contratado";
                        break;
                    case 15:
                        $resultado[$ban]['tipoPersonal']="Incapacitados";
                        break;
                }
                $ban++;
            }
            return $resultado;
	}
        public function ListarPersonasRExcell($idEvento)
	{
	    $resultado= $this->getEntityManager()
            ->createQuery(
                'SELECT  c.cedula, c.primerNombre,c.segundoNombre, c.primerApellido, c.segundoApellido, c.tipoPersonal, c.descripcionEstatusNomina as estatusNomina,'
                    . ' c.unidadAdministrativa, c.ubucacionFuncional, c.codigoNomina, c.nomina, c.nominaCestaticket,p.estatus,p.fechaModificacion'
                    . ',p.monto1 ,p.monto2 ,p.monto3 ,p.observacion FROM SVentasBundle:Ventas p JOIN p.idPersonal c'
                    . ' JOIN p.idEventos d WHERE p.estatus=1 and p.idEventos= '.$idEvento
            )
            ->getResult();
           $ban=0;
            foreach ($resultado as $result){
                if($result['nominaCestaticket']==1){
                    $resultado[$ban]['nominaCestaticket']="SI";
                }else{
                    $resultado[$ban]['nominaCestaticket']="NO";
                }
                if($result['estatus']==1){
                    $resultado[$ban]['estatus']="SI";
                }else{
                    $resultado[$ban]['estatus']="NO";
                }
                switch ($result['tipoPersonal']) {
                    case 0:
                        $resultado[$ban]['tipoPersonal']="Externo";
                        break;
                    case 1:
                        $resultado[$ban]['tipoPersonal']="Empleado Fijo";
                        break;
                    case 2:
                        $resultado[$ban]['tipoPersonal']="Empleado Contratado";
                        break;
                    case 3:
                        $resultado[$ban]['tipoPersonal']="Obrero Fijo";
                        break;
                    case 4:
                        $resultado[$ban]['tipoPersonal']="Obrero Contratado";
                        break;
                    case 5:
                        $resultado[$ban]['tipoPersonal']="Docente Fijo";
                        break;
                    case 6:
                        $resultado[$ban]['tipoPersonal']="Docente Contratado";
                        break;
                    case 7:
                        $resultado[$ban]['tipoPersonal']="Jubilado";
                        break;
                    case 8:
                        $resultado[$ban]['tipoPersonal']="Comision de Servicios";
                        break;
                    case 9:
                        $resultado[$ban]['tipoPersonal']="Libre Nombramiento";
                        break;
                    case 10:
                        $resultado[$ban]['tipoPersonal']="Militar";
                        break;
                    case 11:
                        $resultado[$ban]['tipoPersonal']="Honorarios Profesionales";
                        break;
                    case 12:
                        $resultado[$ban]['tipoPersonal']="Pensionado";
                        break;
                    case 13:
                        $resultado[$ban]['tipoPersonal']="Suplente";
                        break;
                    case 14:
                        $resultado[$ban]['tipoPersonal']="Contratado";
                        break;
                    case 15:
                        $resultado[$ban]['tipoPersonal']="Incapacitados";
                        break;
                }
                $ban++;
            }
            return $resultado;
	}
        public function ListarPersonasTRExcell($idEvento)
	{
            $resultado= $this->getEntityManager()
            ->createQuery(
                'SELECT  c.cedula, c.primerNombre,c.segundoNombre, c.primerApellido, c.segundoApellido, c.tipoPersonal, c.descripcionEstatusNomina as estatusNomina,'
                    . ' c.unidadAdministrativa, c.ubucacionFuncional, c.codigoNomina, c.nomina, c.nominaCestaticket,p.estatus,p.fechaModificacion,'
                    . 'p.monto1 ,p.monto2 ,p.monto3 ,p.observacion FROM SVentasBundle:Ventas p JOIN p.idPersonal c'
                    . ' JOIN p.idEventos d WHERE p.idEventos= '.$idEvento
            )
            ->getResult();
           $ban=0;
            foreach ($resultado as $result){
                if($result['nominaCestaticket']==1){
                    $resultado[$ban]['nominaCestaticket']="SI";
                }else{
                    $resultado[$ban]['nominaCestaticket']="NO";
                }
                if($result['estatus']==1){
                    $resultado[$ban]['estatus']="SI";
                }else{
                    $resultado[$ban]['estatus']="NO";
                }
                switch ($result['tipoPersonal']) {
                    case 0:
                        $resultado[$ban]['tipoPersonal']="Externo";
                        break;
                    case 1:
                        $resultado[$ban]['tipoPersonal']="Empleado Fijo";
                        break;
                    case 2:
                        $resultado[$ban]['tipoPersonal']="Empleado Contratado";
                        break;
                    case 3:
                        $resultado[$ban]['tipoPersonal']="Obrero Fijo";
                        break;
                    case 4:
                        $resultado[$ban]['tipoPersonal']="Obrero Contratado";
                        break;
                    case 5:
                        $resultado[$ban]['tipoPersonal']="Docente Fijo";
                        break;
                    case 6:
                        $resultado[$ban]['tipoPersonal']="Docente Contratado";
                        break;
                    case 7:
                        $resultado[$ban]['tipoPersonal']="Jubilado";
                        break;
                    case 8:
                        $resultado[$ban]['tipoPersonal']="Comision de Servicios";
                        break;
                    case 9:
                        $resultado[$ban]['tipoPersonal']="Libre Nombramiento";
                        break;
                    case 10:
                        $resultado[$ban]['tipoPersonal']="Militar";
                        break;
                    case 11:
                        $resultado[$ban]['tipoPersonal']="Honorarios Profesionales";
                        break;
                    case 12:
                        $resultado[$ban]['tipoPersonal']="Pensionado";
                        break;
                    case 13:
                        $resultado[$ban]['tipoPersonal']="Suplente";
                        break;
                    case 14:
                        $resultado[$ban]['tipoPersonal']="Contratado";
                        break;
                    case 15:
                        $resultado[$ban]['tipoPersonal']="Incapacitados";
                        break;
                }
                $ban++;
            }
            return $resultado;
	}
	public function findOneByIdJoinedToShow($id)
	{
	    return $this->getEntityManager()
            ->createQuery(
                'SELECT p, c, d FROM SVentasBundle:Ventas p JOIN p.idPersonal c JOIN p.idEventos d WHERE p.id= '.$id
            )
            ->getResult();
	}
        
        public function buscarsaime($cedula,$fecha_nacimiento,$sexo)
    {
        $sql="select LETRA,NUMCEDULA,PAISORIGEN,NACIONALIDAD,REPLACE(PRIMERNOMBRE,'\'',' ') AS PRIMERNOMBRE,REPLACE(SEGUNDONOMBRE,'\'',' ') AS SEGUNDONOMBRE,REPLACE(PRIMERAPELLIDO,'\'',' ') AS PRIMERAPELLIDO,REPLACE(SEGUNDOAPELLIDO,'\'',' ') AS SEGUNDOAPELLIDO,if(DATE_FORMAT(FECHANAC, '%d/%m/%Y') is not null, DATE_FORMAT(FECHANAC, '%d/%m/%Y'),FECHANAC) as FECHANAC,FECHACEDORG,CODOBJECION,CODOFICINA,CODESTADOCIVIL,NATURALIZADO,SEXO from global.SAIME_cedulas where NUMCEDULA = '".$cedula."'
                            UNION
                            select LETRA,NUMCEDULA,PAISORIGEN,NACIONALIDAD,REPLACE(PRIMERNOMBRE,'\'',' ') AS PRIMERNOMBRE,REPLACE(SEGUNDONOMBRE,'\'',' ') AS SEGUNDONOMBRE,REPLACE(PRIMERAPELLIDO,'\'',' ') AS PRIMERAPELLIDO,REPLACE(SEGUNDOAPELLIDO,'\'',' ') AS SEGUNDOAPELLIDO,if(DATE_FORMAT(FECHANAC, '%d/%m/%Y') is not null, DATE_FORMAT(FECHANAC, '%d/%m/%Y'),FECHANAC) as FECHANAC,'' AS FECHACEDORG,'' AS CODOBJECION,'' AS CODOFICINA,'' AS CODESTADOCIVIL,'' AS NATURALIZADO,SEXO from global.SAIME_cedulas where NUMCEDULA = '".$cedula."'";
        

        $user = 'user_rusnies';
        $passwd = '81FC5EAD18890D42406DEBCEC8981A';
//        $user = 'user_SNI';
//        $passwd = 'sni185';
        $db = 'global';
        $port = 3306;
        $host = '172.17.2.185';
        
        $con = mysqli_connect($host, $user, $passwd, $db)
            or die('No se pudo conectar: ' . mysqli_error());
        //$con=mysqli_select_db($con,$db) or die('No se pudo seleccionar la base de datos');

        // Realizar una consulta MySQL
        $result = mysqli_query($con,$sql) or die('Consulta fallida: ' . mysqli_error());

        // resultados
        $datos="";
        $datos2="";
        $datos_resultados="";

        while ($line = mysqli_fetch_array($result)) {
            $datos2[]=$line;
        }
        if($datos2!=""){
          $datos=array_reverse($datos2);
        }

        $temFecha="";
        if($datos!=null and count($datos)>1){
            foreach ($datos as $dato) {
                        
                if($temFecha!=$dato['FECHANAC'] and $dato['FECHANAC']==$fecha_nacimiento and $dato['SEXO']== $sexo){
                    $datos_resultados=$dato;
                    $temFecha=$dato['FECHANAC'];
                }
                
            }
           
         }else if($datos!=null and count($datos)==1){
             if($datos[0]['FECHANAC']==$fecha_nacimiento and $datos[0]['SEXO']== $sexo){
                    $datos_resultados=$datos;
             }else{
                $datos_resultados="";
             }
         }else{
            $datos_resultados="";
         }
        // Liberar resultados
        mysqli_free_result($result);
        // Cerrar la conexión
        mysqli_close($con);
         
        return $datos_resultados;
    }

    public function buscarsugao($cedula)
    {
        $sql="select LETRA,NUMCEDULA,PAISORIGEN,NACIONALIDAD,REPLACE(PRIMERNOMBRE,'\'',' ') AS PRIMERNOMBRE,REPLACE(SEGUNDONOMBRE,'\'',' ') AS SEGUNDONOMBRE,REPLACE(PRIMERAPELLIDO,'\'',' ') AS PRIMERAPELLIDO,REPLACE(SEGUNDOAPELLIDO,'\'',' ') AS SEGUNDOAPELLIDO,if(DATE_FORMAT(FECHANAC, '%d/%m/%Y') is not null, DATE_FORMAT(FECHANAC, '%d/%m/%Y'),FECHANAC) as FECHANAC,FECHACEDORG,CODOBJECION,CODOFICINA,CODESTADOCIVIL,NATURALIZADO,SEXO from global.SAIME_cedulas where NUMCEDULA = '".$cedula."'
                            UNION
                            select LETRA,NUMCEDULA,PAISORIGEN,NACIONALIDAD,REPLACE(PRIMERNOMBRE,'\'',' ') AS PRIMERNOMBRE,REPLACE(SEGUNDONOMBRE,'\'',' ') AS SEGUNDONOMBRE,REPLACE(PRIMERAPELLIDO,'\'',' ') AS PRIMERAPELLIDO,REPLACE(SEGUNDOAPELLIDO,'\'',' ') AS SEGUNDOAPELLIDO,if(DATE_FORMAT(FECHANAC, '%d/%m/%Y') is not null, DATE_FORMAT(FECHANAC, '%d/%m/%Y'),FECHANAC) as FECHANAC,'' AS FECHACEDORG,'' AS CODOBJECION,'' AS CODOFICINA,'' AS CODESTADOCIVIL,'' AS NATURALIZADO,SEXO from global.SAIME_cedulas where NUMCEDULA = '".$cedula."'";
        

        $user = 'user_rusnies';
        $passwd = '81FC5EAD18890D42406DEBCEC8981A';
//        $user = 'user_SNI';
//        $passwd = 'sni185';
        $db = 'global';
        $port = 3306;
        $host = '172.17.2.185';
        
        $con = mysqli_connect($host, $user, $passwd, $db)
            or die('No se pudo conectar: ' . mysqli_error());
        //$con=mysqli_select_db($con,$db) or die('No se pudo seleccionar la base de datos');

        // Realizar una consulta MySQL
        $result = mysqli_query($con,$sql) or die('Consulta fallida: ' . mysqli_error());

        // resultados
        $datos="";
        $datos2="";
        $datos_resultados="";

        while ($line = mysqli_fetch_array($result)) {
            $datos2[]=$line;
        }
        if($datos2!=""){
          $datos=array_reverse($datos2);
        }

        $temFecha="";
        if($datos!=null and count($datos)>1){
            foreach ($datos as $dato) {
                        
                if($temFecha!=$dato['FECHANAC'] and $dato['FECHANAC']==$fecha_nacimiento and $dato['SEXO']== $sexo){
                    $datos_resultados=$dato;
                    $temFecha=$dato['FECHANAC'];
                }
                
            }
           
         }else if($datos!=null and count($datos)==1){
             if($datos[0]['FECHANAC']==$fecha_nacimiento and $datos[0]['SEXO']== $sexo){
                    $datos_resultados=$datos;
             }else{
                $datos_resultados="";
             }
         }else{
            $datos_resultados="";
         }
        // Liberar resultados
        mysqli_free_result($result);
        // Cerrar la conexión
        mysqli_close($con);
         
        return $datos_resultados;
    }
    public function listarsugao()
    {
        $query="SELECT cedula, nombre, nombre2, apellido, apellido2, codigo_nomina, nomina, nomina_cestaticket, 
        tipo_nomina, unidad_administrativa, ubicacion_funcional, estatus_nomina, 
        descripcion_estatus_nomina
        FROM personal order by cedula desc, estatus_nomina desc";

        // cambiar bd sugao
	$host="172.17.2.13";
        //$host="172.17.12.86";
	//$host="localhost";
        $port="5432";
        //$user="p_externo";
	$user="pg_consulta";
        //$pass="123456";
	$pass="cnu4874";
        $dbname="CNU2017";
            // Conectando y seleccionado la base de datos 
        $dbconn = pg_connect("host=".$host." port=".$port." dbname=".$dbname." user=".$user." password=".$pass);
        //$dbconn = pg_connect("host=".$host." port=".$port." user=".$user."pass=".$pass." dbname=".$dbname."")or die('No se ha podido conectar: ' . pg_last_error());

        $result = pg_query($query) or die('La consulta fallo: ' . pg_last_error());
        $datos_resultados=array();
        while ($line = pg_fetch_array($result, null, PGSQL_ASSOC)) {
            $datos_resultados[]=$line;
        }

        // Liberando el conjunto de resultados
        pg_free_result($result);
        // Cerrando la conexión
        pg_close($dbconn);
        return $datos_resultados;
    }
}
